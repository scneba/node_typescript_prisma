// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid()) @db.Uuid
  email       String     @unique @db.VarChar(320)
  username    String     @db.VarChar(50)
  firstName   String?    @map("first_name") @db.VarChar(100)
  lastName    String?    @map("last_name") @db.VarChar(50)
  photo       String?
  gender       Gender   @default(MALE)
  phone String?    @unique @map("phone") @db.VarChar(20)
  password    String?    @db.VarChar(100)
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  roles    UserRole[]

  @@map("users")
}
enum Gender {
  MALE
  FEMALE
}

model Portfolio {
  id        String     @id @default(uuid()) @db.Uuid
  name      String     @unique @db.VarChar(100)
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  roles  UserRole[]

  @@map("portfolios")
}

model Role {
  id             String           @id @default(uuid()) @db.Uuid
  name           String           @unique @db.VarChar(320)
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  users       UserRole[]
  permissions RolePermission[]

  @@map("roles")
}

model UserRole {
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @map("user_id") @db.Uuid
  role        Role      @relation(fields: [roleId], references: [id])
  roleId     String    @map("role_id") @db.Uuid
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId String    @map("portfolio_id") @db.Uuid
  assignedBy  String    @map("assigned_by") //email of assigner
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@id([userId, roleId, portfolioId])
  @@map("user_roles")
}

model Permission {
  id             String           @id @default(uuid()) @db.Uuid
  name           String           @unique @db.VarChar(320)
  resource       String           @db.VarChar(50)
  action         String           @db.VarChar(50)
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  roles RolePermission[]

  @@map("permissions")
}

model RolePermission {
  role         Role       @relation(fields: [roledId], references: [id])
  roledId      String     @map("role_id") @db.Uuid
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId String     @map("permission_id") @db.Uuid
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")

  @@id([roledId, permissionId])
  @@map("role_permissions")
}
